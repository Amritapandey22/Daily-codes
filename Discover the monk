/* HACKEREARTH : https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/discover-the-monk/  */

You are given an array A of size N, and Q queries to deal with. For each query, you are given an integer X, 
and you're supposed to find out if X is present in the array A or not.


Solution:

#include<bits/stdc++.h>

using namespace std;

#define ll long long

int main(){

    ios_base::sync_with_stdio(0);

    cin.tie(0);

    int n,q;cin>>n>>q;

    int A[n];

    for(int i = 0; i<n; i++)cin>>A[i];

    sort(A,A+n);

    while(q--){

        int x;cin>>x;

        int low = 0,high = n-1,mid = 0,flag = 0;

        while(low<=high){

            mid = (low+high)/2;

            if(A[mid]==x){

                cout<<"YES"<<endl;

                flag = 1;

                break;

            }

            else if(A[mid]>x)high = mid-1;

            else if(A[mid]<x)low = mid+1;

        }

        if(flag==0)cout<<"NO"<<endl;

    }

    return 0;

}
